/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/coverage/{PostCode}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get mobile provision by postcode
     * @description This endpoint will return 0/1/2/3/4 ratings for EE/H3/TF/VO mobile providers broken down by Voice/Data and Indoor/Outdoor
     */
    get: operations["CoverageByPostCodeGet"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /**
     * MobileCoverageValue
     * Format: int
     * @description States:
     *      * `0` - Clear
     *      * `1` - Red
     *      * `2` - Amber
     *      * `3` - Green * `4` - Enhanced
     * @example 1
     */
    MobileCoverageValue: number;
    /** MobileAvailabilityNotFound */
    MobileAvailabilityNotFound: {
      /** @description Postcode of address, spaces removed */
      PostCode: string;
      /** @description A human readable error message */
      Error: string;
    };
    /** MobileAvailability */
    MobileAvailability: {
      /** @description Postcode of address, spaces removed */
      PostCode: string;
      Availability: components["schemas"]["MobileProvision"][];
      DBName: string;
    };
    /** MobileProvision */
    MobileProvision: {
      /**
       * Format: int32
       * @description Unique Property Reference Number
       */
      UPRN: number;
      /** @description A compiled address description based on use of the Ordnance Survey AddressBase fields of the form - Building Name, Building Number, Dependent_ThoroughFare */
      AddressShortDescription: string;
      /** @description Postcode of address, spaces removed */
      PostCode: string;
      EEVoiceOutdoor: components["schemas"]["MobileCoverageValue"];
      EEVoiceOutdoorNo4g: components["schemas"]["MobileCoverageValue"];
      EEVoiceIndoor: components["schemas"]["MobileCoverageValue"];
      EEVoiceIndoorNo4g: components["schemas"]["MobileCoverageValue"];
      EEDataOutdoor: components["schemas"]["MobileCoverageValue"];
      EEDataOutdoorNo4g: components["schemas"]["MobileCoverageValue"];
      EEDataIndoor: components["schemas"]["MobileCoverageValue"];
      EEDataIndoorNo4g: components["schemas"]["MobileCoverageValue"];
      H3VoiceOutdoor: components["schemas"]["MobileCoverageValue"];
      H3VoiceOutdoorNo4g: components["schemas"]["MobileCoverageValue"];
      H3VoiceIndoor: components["schemas"]["MobileCoverageValue"];
      H3VoiceIndoorNo4g: components["schemas"]["MobileCoverageValue"];
      H3DataOutdoor: components["schemas"]["MobileCoverageValue"];
      H3DataOutdoorNo4g: components["schemas"]["MobileCoverageValue"];
      H3DataIndoor: components["schemas"]["MobileCoverageValue"];
      H3DataIndoorNo4g: components["schemas"]["MobileCoverageValue"];
      TFVoiceOutdoor: components["schemas"]["MobileCoverageValue"];
      TFVoiceOutdoorNo4g: components["schemas"]["MobileCoverageValue"];
      TFVoiceIndoor: components["schemas"]["MobileCoverageValue"];
      TFVoiceIndoorNo4g: components["schemas"]["MobileCoverageValue"];
      TFDataOutdoor: components["schemas"]["MobileCoverageValue"];
      TFDataOutdoorNo4g: components["schemas"]["MobileCoverageValue"];
      TFDataIndoor: components["schemas"]["MobileCoverageValue"];
      TFDataIndoorNo4g: components["schemas"]["MobileCoverageValue"];
      VOVoiceOutdoor: components["schemas"]["MobileCoverageValue"];
      VOVoiceOutdoorNo4g: components["schemas"]["MobileCoverageValue"];
      VOVoiceIndoor: components["schemas"]["MobileCoverageValue"];
      VOVoiceIndoorNo4g: components["schemas"]["MobileCoverageValue"];
      VODataOutdoor: components["schemas"]["MobileCoverageValue"];
      VODataOutdoorNo4g: components["schemas"]["MobileCoverageValue"];
      VODataIndoor: components["schemas"]["MobileCoverageValue"];
      VODataIndoorNo4g: components["schemas"]["MobileCoverageValue"];
    };
    /** GeneralError */
    GeneralError: {
      /** @description A human readable error message */
      Error: string;
    };
    MobileAvailabilityArray: components["schemas"]["MobileAvailability"][];
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  CoverageByPostCodeGet: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description The postcode of interest */
        PostCode: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description <p>Successful operation - mobile provision is returned</p>
       *
       *     <p>The return values 0, 1, 2, 3 and 4 represents as follows :</p>
       *         <ul>
       *             <li> 0 = Clear (no signal predicted) </li>
       *             <li> 1 = Red (reliable signal unlikely)</li>
       *             <li> 2 = Amber (may experience problems with connectivity)</li>
       *             <li> 3 = Green (likely to have good coverage and receive a data rate to support basic web services)</li>
       *             <li> 4 = Enhanced (likely to have good coverage indoors and to receive an enhanced data rate to support multimedia services)</li>
       *         </ul> */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MobileAvailability"];
        };
      };
      /** @description Post Code not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MobileAvailabilityNotFound"];
        };
      };
      /** @description General error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GeneralError"];
        };
      };
    };
  };
}
